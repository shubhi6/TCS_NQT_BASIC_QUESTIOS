-----------------------------------1-------------------------------

# Maximum and Minimum Digit in a Number
n = int(input())
maxi = float('-inf')
mini = float('inf')
while n>0:
    l = n%10
    if l>= maxi:
        maxi = l
    if l< mini:
        mini = l
    n=n//10
print(maxi,mini)
  
-----------------------------------2-------------------------------

# Print Fibonacci Series up to Nth term
n=int(input())
a,b=0,1
for i in range(n):
    print(a,end=" ")
    a,b=b,a+b   
print()

----------------------------------3-------------------------------

# Calculate the Power of a Number : Binary Exponentiation
n,m=map(int,input().split()) #or
# m=int(input()) 
print(n**m)

-----------------------------------4-------------------------------

# Factors of a Given Number
n=int(input())
for i in range (1,n+1):
    if n%i==0:
        print(i,end=" ")
    
-----------------------------------5-------------------------------

# Prime in given range
s=int(input())
e=int(input())
for i in range(s,e):
    if i>1:
        for j in range(2,i):
            if(i%j)==0:
                break
        else:
            print(i)

-----------------------------------6-------------------------------

# Find whether eve or odd
n=int(input())
if n%2==0:
    print("EVEN")
else:
    print("ODD")

-----------------------------------7------------------------------

# Find whether positive or negative
n=int(input())
if n>0:
    print("POSITIVE")
elif n==0:
    print("ZERO")
else:
    print("NEGATIVE")

-----------------------------------8-------------------------------

# Find the factorial of the number
n=int(input())
f=1
for i in range(1,n+1):
    f*=i
print(f)

-----------------------------------9-------------------------------

# Greatest of two number
a,b=map(int,input().split())
print(max(a,b))
---------or-----
a,b=map(int,input().split())
if a>b:
    print(a)
elif b>a:
    print(b)
else:
    print("equal")

-----------------------------------10-------------------------------

#Greatest of three number 
a,b,c=map(int,input().split())
print(max(a,b,c))
---------or-----
a,b,c=map(int,input().split())
if a>b and a>c:
    print(a)
elif b>a and b>c:
    print(b)
elif c>a and c>b:
    print(c)
else:
    print("equal")

-----------------------------------11-------------------------------

#Calculate area and perimeter of circle
r=int(input())
pi=3.14
a=r*r*pi
p=2*pi*r
print(a,p)

-----------------------------------12-------------------------------

#Check if number is palindrome

def ispal(n):
    return str(n)==str(n)[::-1]

n=int(input())
if ispal(n):
    print(f"{n}, is palindrome")
else:
    print(f"{n}, is not palindrome")

-----------------------------------13-------------------------------

# Find all the palindrom numbers in range
def ispal(n):
    return str(n)==str(n)[::-1]
def pr(S,E):
    return[n for n in range(S,E+1) if ispal(n)]

S=int(input())
E=int(input())
print(pr(S,E))

-----------------------------------14-------------------------------

# Check if Prime or not 

def isprime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

n=int(input())
if isprime(n):
    print("YES")
else:
    print("NO")


----------------------------------15-------------------------------

# In a number square every digits and sum them
def fds(n):
    n=str(n)
    t=0
    for d in n:
        sd=int(d)**2
        t+=sd
    return t
n=int(input())
print(fds(n))

-----------------------------------16-------------------------------

# Check if a number is armstrong or not
def ifarm(n):
    d=str(n)
    p=len(d)
    sp=sum(int(dg)**p for dg in d)
    return sp==n
n=int(input())
if ifarm(n):
    print("YES")
else:
    print("NO")

-----------------------------------17-------------------------------

# check if a number is a perfect number
def isp(n):
    if n<=1:
        return False
    sd=1
    for i in range(2,int(n**0.5)+1):
        if n%i==0:
            sd+=i
            if i!=n//i:
                sd+=n//i
    return sd==n

n=int(input())
if isp(n):
    print("YES")
else:
    print("NO")

-----------------------------------18-------------------------------

# Sum of first n natural numbers
def sunm(n):
    return n*(n+1)//2
n=int(input())
print(sunm(n))



# Sum of an AP series
def ap(a,n,d):
    return (n//2)*(2*a+(n-1)*d)
a,n,d=map(int,input().split())
print(ap(a,n,d))

-----------------------------------19-------------------------------

# Sum of an GP series
def ap(a,n,r):
    if r==1:
        return a*n
    return a*(r**(n-1))//(r-1)
a,n,r=map(int,input().split())
print(ap(a,n,r))

-----------------------------------20-------------------------------

# Find whether leap year or not
def islp(y):
    if(y%4==0):
        if(y%100==0):
            if(y%400==0):
                return True
            else:
                return False
        else:
            return True
    else:
        return False    
y=int(input())    
if islp(y):
    print("YES")
else:
    print("NO")
    
-----------------------------------21-------------------------------

# Print all the prime factors of a given number
from sympy import primefactors
n=int(input())
f=primefactors(n)
print(f)
----------or----------
def pf(n):
    f=[]
    while n%2==0:
        f.append(2)
        n//=2
    for i in range(3,int(n**0.5)+1,2):
        while n%i==0:
            f.append(i)
            n//=i
    if n>2:
        f.append(n)
    return f
n=int(input())
print(pf(n))
            
-----------------------------------22-------------------------------      

# Reverse digits of a number
n=int(input())
d=str(n)[::-1]
print(d)
            
-----------------------------------23-------------------------------            

# Find GCD of two numbers
import math as m
a,b=map(int,input().split())
print(m.gcd(a,b))

-----------------------------------24-------------------------------

# Find LCM of two numbers
import math as m
a,b=map(int,input().split())
print(abs(a*b)//m.gcd(a,b))

-----------------------------------25-------------------------------

# Check if number is strong or not
import math

def isst(n):
    di = str(n)
    df = sum(math.factorial(int(dig)) for dig in di)
    return df == n

n = int(input("Enter a number: "))    
if isst(n):
    print("YES")
else:
    print("NO")

-----------------------------------26-------------------------------

# Check if automorphic number or not
import math

def isam(n):
    di = n*n
    df = str(n)
    dg=str(di)
    return dg.endswith(df)

n = int(input("Enter a number: "))    
if isam(n):
    print("YES")
else:
    print("NO")

-----------------------------------27-------------------------------

# Check if a given number is harshad or niven
def ishd(n):
    df=sum(int(d) for d in str(n))
    return n%df==0
  
n = int(input("Enter a number: "))    
if ishd(n):
    print("YES")
else:
    print("NO")

-----------------------------------28-------------------------------

# Abundant number or not
def isab(n):
    df=sum(i for i in range(1,n) if n%i==0)
    return df>n
  
n = int(input("Enter a number: "))    
if isab(n):
    print("YES")
else:
    print("NO")

-----------------------------------29-------------------------------

# Sum of digits of number
def fs(n):
    return sum(int(d) for d in str(n))
n=int(input())
print(fs(n))
-------or-----
n=int(input())
t=0
for i in str(n):
    t+=int(i)
print(t)

-----------------------------------30-------------------------------

# Sum of numbers upto given range
def s(n):
    t=0
    for i in range(n+1):
        t=t+i
    return t
n=int(input())
print(s(n))
-------or------
def s(n):
    return n*(n+1)//2
n=int(input())
print(s(n))

-----------------------------------31-------------------------------

# Permutataions in which N people can occupy R seats in classroom
import math
def pr(n,r):
    if r>n:
        return 0
    return math.factorial(n)//math.factorial(n-r)
n=int(input())
r=int(input())
print(pr(n,r))

-----------------------------------32-------------------------------

# Program to add two fractions
import math
def f(n1,d1,n2,d2):
    l=d1*d2//math.gcd(d1,d2)
    an1=n1*(l//d1)
    an2=n2*(l//d2)
    n=an1+an2
    g=math.gcd(n,l)
    sn=n//g
    sd=l//g
    return sn,sd
n1=int(input())
d1=int(input())
n2=int(input())
d2=int(input())
if d1==0 or d2==0:
    print("denominator cant be zero")
else:
    resn,resd=f(n1,d1,n2,d2)
    print(f"{resn}/{resd}")

# Replace '0' with '1' in given integre
def reps(n):
    s=str(n)
    m=s.replace('0','1')
    k=int(m)
    return k
n=int(input())
print(reps(n))

-----------------------------------33-------------------------------

# Program to find root of quadratic equation
import cmath
def er(a,b,c):
    d=b**2-4*a*c
    r1=(-b + cmath.sqrt(d))//(2*a)
    r2=(-b - cmath.sqrt(d))//(2*a)
    return r1,r2
a,b,c=map(float,input().split())
print(er(a,b,c)) 

-----------------------------------34-------------------------------

# Express the given number as sum of two prime numbers
def is_prime(n):
    if n <= 1:
        return False
    if n == 2:
        return True  # 2 is the only even prime number
    if n % 2 == 0:
        return False
    for i in range(3, int(n**0.5) + 1, 2):
        if n % i == 0:
            return False
    return True

def find_prime_sum(n):
    if n < 4:
        return "Number must be greater than or equal to 4."
    for i in range(2, n):
        if is_prime(i) and is_prime(n - i):
            return i, n - i
    return "No prime sum found."

number = int(input("Enter a number: "))
result = find_prime_sum(number)
print(f"{number} can be expressed as the sum of the primes: {result}")

-----------------------------------35-------------------------------

#Calculate the sum of the table of any given number
def tb(n):
    d=0
    for i in range(1,n+1):
        t=n*i
        d+=t
    return d
n = int(input())
print(tb(n))
